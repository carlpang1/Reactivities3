{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","app/common/form/MyTextArea.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivityItem.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","app/models/activity.ts","features/activities/forms/ActivityForm.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","userStore","logout","startsWith","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","detail","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listUserActivities","Profile","userName","displayName","image","ActivityStore","activitiesRegistry","Map","selectedActivity","undefined","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","setLoadingInitial","axiosParams","setActivity","setPagination","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUserName","host","find","x","date","Date","state","createActivity","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","attendee","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","Object","entries","activitiesByDate","reduce","activities","format","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","activityStore","modalStore","closeModal","getUser","setImage","setDisplayName","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","updateProfile","photo","photos","isMain","p","followingsCount","loadFollowings","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","exact","as","NavLink","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","ProfileCard","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","title","venue","secondary","clearing","description","floated","groupedActivities","group","sub","ActivityFilters","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","displayname","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","border","resetForm","rows","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","category","verticalAlign","city","relaxed","divided","Extra","useParams","ActivityDetailedSideBar","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","details","Modal","onClose","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","assign","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","MyTextArea","setEditMode","ProfileActivityItem","userActivity","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","menuPosition","Statistic","PrivateRoute","Component","component","rest","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","ActivityFormValues","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c3d7724c.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber: number = 1, pageSize: number = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Activity, ActivityFormValues } from \"./../models/activity\";\r\nimport { store } from \"./../stores/store\";\r\nimport { Photo, Profile, UserActivity } from \"./../models/profile\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") toast.error(data);\r\n\r\n        if ((config.method = \"get\" && data.errors.hasOwnProperty(\"id\")))\r\n          history.push(\"/not-found\");\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) modalStateErrors.push(data.errors[key]);\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n\r\n        break;\r\n      case 401:\r\n        store.userStore.logout();\r\n        if (\r\n          headers[\"www-authenticate\"].startsWith('Bearer error=\"invalid_token\"')\r\n          // (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"'))\r\n        ) {\r\n          toast.error(\"Session expired - please login again\");\r\n        } else {\r\n          toast.error(\"Unauthorised\");\r\n        }\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  detail: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fblogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>(`/account/refreshToken`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  update: (profile: Partial<Profile>) =>\r\n    requests.put<void>(\"/profiles\", profile),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listUserActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followingsCount: number;\r\n  followersCount: number;\r\n  following: boolean;\r\n  photos: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.userName;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n  hostUsername: string;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"./../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport UserStore from \"./userStore\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination } from \"../models/pagination\";\r\nimport { PagingParams } from \"./../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activitiesRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activitiesRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") {\r\n          this.predicate.delete(key);\r\n        }\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(predicate, true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(predicate, true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(predicate, true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(predicate);\r\n        this.predicate.set(predicate, value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key == \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activitiesRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const response = await agent.Activities.list(this.axiosParams);\r\n      response.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(response.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.setLoadingInitial(true);\r\n      try {\r\n        activity = await agent.Activities.detail(id);\r\n        runInAction(() => {\r\n          this.setActivity(activity!);\r\n          this.selectedActivity = activity;\r\n          this.setLoadingInitial(false);\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activitiesRegistry.get(id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    var user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username == user?.userName\r\n      );\r\n      activity.isHost = activity.hostUserName === user.userName;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUserName\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activitiesRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = await this.loadActivity(activity.id!);\r\n      runInAction(() => {\r\n        this.activitiesRegistry.set(activity.id!, newActivity!);\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activitiesRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activitiesRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\r\n            (a) => a.username !== user?.userName\r\n          );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activitiesRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity\r\n          ?.isCancelled;\r\n        this.activitiesRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activitiesRegistry.forEach((activity) => {\r\n      activity.attendees?.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { access } from \"node:fs\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      store.activityStore.activitiesRegistry.clear();\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (displayName: string) => {\r\n    if (this.user) this.user.displayName = displayName;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status == \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.fbLoading = false;\r\n            this.user = user;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { store } from \"./store\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile: boolean = false;\r\n  uploading: boolean = false;\r\n  loading: boolean = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab: number = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.userName === this.profile.username;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.update(profile);\r\n      runInAction(() => {\r\n        if (this.profile) this.profile = { ...this.profile, ...profile };\r\n        store.userStore.setDisplayName(profile.displayName!);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      var response = await agent.Profiles.uploadPhoto(file);\r\n      var photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (id: string) => {\r\n    try {\r\n      await agent.Profiles.deletePhoto(id);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos = this.profile?.photos.filter((p) => p.id !== id);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.userName &&\r\n          this.profile.username == username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.userName\r\n        ) {\r\n          following\r\n            ? this.profile.followingsCount++\r\n            : this.profile.followingsCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadActivities = async (predicate: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      var activities = await agent.Profiles.listUserActivities(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingActivities = false));\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport { Profile } from \"../models/profile\";\r\nimport CommentStore from \"./commentStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { ServerError } from \"./../models/serverError\";\r\nimport { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded: boolean = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { JsxElement } from \"typescript\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \" + error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"./../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item exact as={NavLink} to=\"/\" header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.userName}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  if (userStore.user?.userName == profile.username) return null;\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          basic\r\n          fluid\r\n          loading={loading}\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const style = { borderColor: \"orange\", borderWidth: 4 };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? style : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"./../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUserName}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" />\r\n          {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Button, Grid, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    activitiesRegistry,\r\n    pagination,\r\n    loadActivities,\r\n    setPagingParams,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activitiesRegistry.size <= 1) loadActivities();\r\n  }, [activityStore]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\">\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: \"\" }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as=\"h2\" content=\"Login to Reactivities\" color=\"teal\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            positive\r\n            content=\"Login\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { AnyAaaaRecord } from \"node:dns\";\r\nimport React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return ( \r\n    <Formik\r\n      initialValues={{\r\n        username: \"\",\r\n        displayname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayname: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header as=\"h2\" content=\"Sign Up to Reactivities\" color=\"teal\" />\r\n          <MyTextInput name=\"displayname\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"User Name\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            positive\r\n            content=\"Register\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Image,\r\n  Button,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              icon=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\r\nimport { useEffect } from \"react\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          initialValues={{ body: \"\" }}\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key == \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key == \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profile/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const { activityStore } = useStore();\r\n  const { loading, updateAttendance, cancelActivityToggle } = activityStore;\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.hostUserName}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={activity.isCancelled}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n            disabled={activity.isCancelled}\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"./../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, hostUserName },\r\n}: Props) {\r\n  if (attendees == null) return null;\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length == 1 ? \"Person\" : \"People\"} Going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === hostUserName && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadingInitial,\r\n    loadActivity,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Opps - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>\r\n            {commonStore.error?.details};\r\n          </code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useStore } from \"./../../stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, { preview: URL.createObjectURL(file) })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        <>\r\n          <div\r\n            className=\"img-preview\"\r\n            style={{ minHeight: 200, overflow: \"hidden\" }}\r\n          />\r\n          {files && files.length > 0 && (\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          )}\r\n        </>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo } from \"./../../app/models/profile\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploading,\r\n      loading,\r\n      uploadPhoto,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleDeletePhoto(id: string, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(id);\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={photo.id + \"_main\"}\r\n                        disabled={photo.isMain}\r\n                        loading={target === photo.id + \"_main\" && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        disabled={photo.isMain}\r\n                        name={photo.id + \"_delete\"}\r\n                        loading={target === photo.id + \"_delete\" && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo.id, e)}\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, Form, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"./../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: profile?.displayName,\r\n        bio: profile?.bio,\r\n        error: \"\",\r\n      }}\r\n      onSubmit={(values) => {\r\n        console.log(profile);\r\n        updateProfile(values).then(() => setEditMode(false));\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(\"The display name is required\"),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit}>\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextArea rows={3} name=\"bio\" placeholder=\"Add your bio\" />\r\n          <Button\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            positive\r\n            content=\"Update profile\"\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Form\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, loadingFollowings, followings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { profile } from \"node:console\";\r\nimport { truncate } from \"node:fs\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Icon, Image, Tab } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport { format, parseISO } from \"date-fns\";\r\n\r\ninterface Props {\r\n  userActivities: UserActivity[];\r\n  loadingActivities: boolean;\r\n}\r\nexport default function ProfileActivityItem({\r\n  userActivities,\r\n  loadingActivities,\r\n}: Props) {\r\n  return (\r\n    <Tab.Pane loading={loadingActivities} style={{ border: \"none\" }}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4} style={{ \"text-align\": \"center\" }}>\r\n            {userActivities.map((userActivity) => (\r\n              <Card\r\n                key={userActivity.id}\r\n                as={Link}\r\n                to={`/activities/${userActivity.id}`}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${userActivity.category}.jpg`}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header>{userActivity.title}</Card.Header>\r\n                  <Card.Description>\r\n                    <div>{format(new Date(userActivity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(userActivity.date), \"h:mm a\")}</div>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n}\r\n","import React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Card, Grid, Header, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivityItem from \"./ProfileActivityItem\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const {\r\n    profileStore: { loadingActivities, userActivities, loadActivities },\r\n  } = useStore();\r\n  const [predicate, setPredicate] = useState(\"future\");\r\n\r\n  const panes = [\r\n    { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n    { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n    { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadActivities(predicate);\r\n  }, [predicate, loadActivities]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    setPredicate(panes[data.activeIndex as number].pane.key);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            menu={{ secondary: true, pointing: true }}\r\n            panes={panes}\r\n            onTabChange={(e, data) => {\r\n              handleTabChange(e, data);\r\n            }}\r\n          />\r\n          <br />\r\n          <ProfileActivityItem\r\n            userActivities={userActivities}\r\n            loadingActivities={loadingActivities}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Item,\r\n  Header,\r\n  Statistic,\r\n  Divider,\r\n  Reveal,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingsCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport { useParams } from \"react-router\";\r\nimport { useStore } from \"./../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { profile, loadingProfile, loadProfile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUserName: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees?: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"./../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"./../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"./../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"./../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"./../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadingInitial,\r\n    createActivity,\r\n    updateActivity,\r\n    loadActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(\"The activity category is required\"),\r\n    date: Yup.string().required(\"The activity date is required\").nullable(),\r\n    venue: Yup.string().required(\"The activity venue is required\"),\r\n    city: Yup.string().required(\"The activity city is required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = { ...activity, id: uuid() };\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      updateActivity(activity).then(() => {\r\n        history.push(`/activities/${activity.id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isSubmitting, isValid, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !isValid || !dirty}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport ActivityForm from \"../../features/activities/forms/ActivityForm\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { userStore, commonStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}